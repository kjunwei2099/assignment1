
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Kwan Jun Wei
 */
public class jDelivery extends javax.swing.JFrame {

    /**
     * Creates new form jDelivery
     */
    
    public jDelivery() {
        initComponents();
        configuration();
    }
    private String role="";
    private String username;
    private String password;
    private cDeliveryStaff deliveryStaff;

    public void setRole(String role){
        this.role = role;
    }
    
    public void setUsername(String username){
        this.username=username;
        lblWelcome.setText("Welcome back "+this.username);
    }
    
    public void setPassword(String password){
        this.password=password;
    }
    
    public void configuration(){
        deliveryStaff= new cDeliveryStaff(username,password);
        deliveryStaff.loadOrderList();
        deliveryStaff.loadUserList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableCustomerOrder = new javax.swing.JTable();
        btnLoadTable = new javax.swing.JButton();
        btnUpdateDeliveryStatus = new javax.swing.JButton();
        lblStatus = new javax.swing.JLabel();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        lblWelcome = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblFeedback = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();
        comboDelivery = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        btnShowFeedback = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        comboFeedback = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tableCustomerOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Delivery Status", "Item Name", "Quantity", "cFeedback", "cName", "cAddress", "cPostcode", "cCity", "cState"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableCustomerOrder);

        btnLoadTable.setText("Load Table");
        btnLoadTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadTableActionPerformed(evt);
            }
        });

        btnUpdateDeliveryStatus.setText("Update");
        btnUpdateDeliveryStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateDeliveryStatusActionPerformed(evt);
            }
        });

        lblStatus.setText("Status :");

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Out for delivery");

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setText("Delivered");

        lblWelcome.setText("Welcome Back !");

        jLabel3.setText("Feedback :");

        jLabel5.setText("Update Delivery Status");

        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        jLabel1.setText("Order ID");

        btnShowFeedback.setText("Show Feedback");
        btnShowFeedback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowFeedbackActionPerformed(evt);
            }
        });

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchKeyPressed(evt);
            }
        });

        jLabel2.setText("Search Field");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblWelcome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLogout))
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(comboDelivery, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(15, 15, 15)
                                        .addComponent(jLabel5))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jRadioButton3)
                                            .addComponent(jRadioButton2)))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(btnUpdateDeliveryStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 198, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(345, 345, 345)
                                .addComponent(btnLoadTable))
                            .addComponent(lblFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(comboFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnShowFeedback))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblWelcome)
                    .addComponent(btnLogout))
                .addGap(4, 4, 4)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5)
                                .addComponent(jLabel1)))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboDelivery, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRadioButton2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton3)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdateDeliveryStatus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnLoadTable)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 28, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnShowFeedback)
                            .addComponent(comboFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addComponent(lblStatus)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoadTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadTableActionPerformed
        DefaultTableModel objModel = (DefaultTableModel) tableCustomerOrder.getModel();
        objModel.setRowCount(0);
        comboFeedback.removeAllItems();
        comboDelivery.removeAllItems();
        deliveryStaff.loadOrderList();
        deliveryStaff.loadUserList();
        for(int i =0;i<deliveryStaff.getOrderList().size();i++) // loop order text file
        {
            String[]order = deliveryStaff.getOrderList().get(i).split(";");
            String orderID = order[0];
            String tempUsername = order[3];
            String tempDeliveryStaff = order[9];
            String deliveryStatus = order[10];
            String haveFeedback = order[11];
            if(!deliveryStatus.equals("null")&&username.equals(tempDeliveryStaff))//
            {
                
                for(int x = 0;x<deliveryStaff.getUserList().size();x++) // loop userInfo text file to add customer shipment info (address,postcode,city,state)
                {
                    String[]user = deliveryStaff.getUserList().get(x).split(";");
                    String custUsername = user[1];
                    if(tempUsername.equals(custUsername))
                    {
                        String address = user[3];
                        String postcode = user[4];
                        String city = user[5];
                        String state = user[6];
                        objModel.addRow(new Object[]{orderID,deliveryStatus,order[4],order[6],haveFeedback,custUsername,address,postcode,city,state});
                        if(!deliveryStatus.equals("Delivered"))
                        {
                            comboDelivery.addItem(orderID);// add orderID into comboDelivery for delivery staff to update delivery status
                        }
                        if(haveFeedback.equals("yes")) // if got feedback then add orderID into comboFeedback
                        {
                            comboFeedback.addItem(orderID);
                        }
                    }
                }
            }
        }
        // remove redundant item in comoboDelivery
        try
        {
            Set<String> seenValues = new HashSet<String>();
            for(int i=0;i<comboDelivery.getItemCount();i++)
            {
                String currentValue = comboDelivery.getItemAt(i);
                if (seenValues.contains(currentValue)) {
                    // If the value has already been seen, remove it from the combo box
                    comboDelivery.removeItemAt(i);
                    i--; // Decrement the index to account for the removed element
                } else {
                    // Otherwise, add the value to the set of seen values
                    seenValues.add(currentValue);
                }
            }
        }catch(Exception e){}
        // remove redundant item in comboFeedback
        try
        {
            Set<String> seenValues = new HashSet<String>();
            for(int i=0;i<comboFeedback.getItemCount();i++)
            {
                String currentValue = comboFeedback.getItemAt(i);
                if (seenValues.contains(currentValue)) {
                    // If the value has already been seen, remove it from the combo box
                    comboFeedback.removeItemAt(i);
                    i--; // Decrement the index to account for the removed element
                } else {
                    // Otherwise, add the value to the set of seen values
                    seenValues.add(currentValue);
                }
            }
        }catch(Exception e){}
    }//GEN-LAST:event_btnLoadTableActionPerformed

    private void btnUpdateDeliveryStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateDeliveryStatusActionPerformed
        String tempStatus = "";
        DefaultTableModel objModel = (DefaultTableModel) tableCustomerOrder.getModel();
        if(comboDelivery.getSelectedIndex()!=-1)
        {
            if(jRadioButton2.isSelected()||jRadioButton3.isSelected()) // check if radio button is selected
            {
                if(jRadioButton2.isSelected())
                {
                    tempStatus="Out for delivery";
                }
                else if(jRadioButton3.isSelected())
                {
                    tempStatus="Delivered";
                }
                for(int i=0;i<deliveryStaff.getOrderList().size();i++)
                {
                    String[]order = deliveryStaff.getOrderList().get(i).split(";");
                    String tempOrderID = order[0];
                    if(tempOrderID.equals(comboDelivery.getSelectedItem()))
                    {
                        deliveryStaff.updateDeliveryStatus(tempOrderID, tempStatus);
                    }
                    for(int x=0;x<tableCustomerOrder.getRowCount();x++)
                    {
                        String orderID = objModel.getValueAt(x,0).toString();
                        if(orderID.equals(comboDelivery.getSelectedItem()))
                        {
                            objModel.setValueAt(tempStatus, x, 1);
                        } 
                    }
                }
                lblStatus.setText("Status : Delivery Status updated!");
            }
            else
            {
                lblStatus.setText("Status : Please select one status to update!");
            }           
        }
        else
        {
            lblStatus.setText("Status : Please select orderID to update!");
        }
        btnLoadTable.doClick();
    }//GEN-LAST:event_btnUpdateDeliveryStatusActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        this.role="";
        this.username="";
        this.dispose();
        jDashboard d = new jDashboard();
        d.setVisible(true);
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnShowFeedbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowFeedbackActionPerformed
        String tempOrderID = comboFeedback.getSelectedItem().toString();
        for(int i=0;i<deliveryStaff.getOrderList().size();i++)
        {
            String[]order=deliveryStaff.getOrderList().get(i).split(";");
            String orderID = order[0];
            String haveFeedback = order[11];
            String feedback = order[12];
            if(haveFeedback.equals("yes")&&orderID.equals(tempOrderID))
            {
                lblFeedback.setText(feedback);                
            }
        }
        lblStatus.setText("Status : Feedback showed");
    }//GEN-LAST:event_btnShowFeedbackActionPerformed

    private void txtSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyPressed
        DefaultTableModel table = (DefaultTableModel) tableCustomerOrder.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(table);
        tableCustomerOrder.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(txtSearch.getText().trim()));
    }//GEN-LAST:event_txtSearchKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jDelivery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jDelivery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jDelivery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jDelivery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jDelivery().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLoadTable;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnShowFeedback;
    private javax.swing.JButton btnUpdateDeliveryStatus;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> comboDelivery;
    private javax.swing.JComboBox<String> comboFeedback;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFeedback;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblWelcome;
    private javax.swing.JTable tableCustomerOrder;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
